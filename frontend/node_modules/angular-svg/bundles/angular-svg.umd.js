(function (global, factory) {
    typeof exports === 'object' && typeof module !== 'undefined' ? factory(exports, require('@angular/core'), require('@angular/common'), require('util')) :
    typeof define === 'function' && define.amd ? define('angular-svg', ['exports', '@angular/core', '@angular/common', 'util'], factory) :
    (factory((global['angular-svg'] = {}),global.ng.core,global.ng.common,global.util));
}(this, (function (exports,core,common,util) { 'use strict';

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var Stroke = /** @class */ (function () {
        function Stroke(fill, strokeFill, dashArray, thickness, opacity) {
            this.fill = fill != null ? fill : 'transparent';
            this.strokeFill = strokeFill != null ? strokeFill : 'black';
            this.dashArray = dashArray != null ? dashArray : 0;
            this.thickness = thickness != null ? thickness : 1;
            this.opacity = opacity != null ? opacity : 1;
        }
        return Stroke;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var Vertex = /** @class */ (function () {
        function Vertex() {
            this.x = 0;
            this.y = 0;
        }
        return Vertex;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var Polygon = /** @class */ (function () {
        function Polygon() {
            this.vertices = new Array();
        }
        return Polygon;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var Polyline = /** @class */ (function () {
        function Polyline() {
            this.vertices = new Array();
        }
        return Polyline;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SvgCircleComponent = /** @class */ (function () {
        function SvgCircleComponent() {
            this.circleMousedown = new core.EventEmitter();
            this.circleMouseover = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        SvgCircleComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                if (!this.circle.stroke) {
                    this.circle.stroke = new Stroke();
                }
            };
        /**
         * @param {?} $event
         * @return {?}
         */
        SvgCircleComponent.prototype.onCircleMouseDown = /**
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                if ($event) {
                    this.circleMousedown.emit({ mouseEvent: $event, circle: this.circle });
                }
            };
        /**
         * @param {?} $event
         * @return {?}
         */
        SvgCircleComponent.prototype.onCircleMouseOver = /**
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                if ($event) {
                    this.circleMouseover.emit({ mouseEvent: $event, circle: this.circle });
                }
            };
        SvgCircleComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'g[svg-circle]',
                        template: "<svg:circle [attr.cx]=\"circle?.cx\"\r\n            [attr.cy]=\"circle?.cy\"\r\n            [attr.r]=\"circle?.r\"\r\n            [attr.stroke]=\"circle?.stroke?.strokeFill\"\r\n            [attr.stroke-dasharray]=\"circle?.stroke?.dashArray\"\r\n            [attr.stroke-width]=\"circle?.stroke?.thickness\"\r\n            [attr.fill]=\"circle?.stroke?.fill\"\r\n            vector-effect=\"non-scaling-stroke\"\r\n            [attr.stroke-opacity]=\"circle?.stroke?.opacity\"\r\n            (mousedown)=\"onCircleMouseDown($event)\"\r\n            (mouseover)=\"onCircleMouseOver($event)\"></svg:circle>",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        SvgCircleComponent.ctorParameters = function () { return []; };
        SvgCircleComponent.propDecorators = {
            circle: [{ type: core.Input }],
            circleMousedown: [{ type: core.Output }],
            circleMouseover: [{ type: core.Output }]
        };
        return SvgCircleComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SvgCircleModule = /** @class */ (function () {
        function SvgCircleModule() {
        }
        SvgCircleModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule
                        ],
                        declarations: [SvgCircleComponent],
                        exports: [SvgCircleComponent]
                    },] }
        ];
        return SvgCircleModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SvgEllipseComponent = /** @class */ (function () {
        function SvgEllipseComponent() {
            this.ellipseMousedown = new core.EventEmitter();
            this.ellipseMouseover = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        SvgEllipseComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                if (!this.ellipse.stroke) {
                    this.ellipse.stroke = new Stroke();
                }
            };
        /**
         * @param {?} $event
         * @return {?}
         */
        SvgEllipseComponent.prototype.onEllipseMouseDown = /**
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                if ($event) {
                    this.ellipseMousedown.emit({ mouseEvent: $event, ellipse: this.ellipse });
                }
            };
        /**
         * @param {?} $event
         * @return {?}
         */
        SvgEllipseComponent.prototype.onEllipseMouseOver = /**
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                if ($event) {
                    this.ellipseMouseover.emit({ mouseEvent: $event, ellipse: this.ellipse });
                }
            };
        SvgEllipseComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'g[svg-ellipse]',
                        template: "<svg:ellipse [attr.cx]=\"ellipse?.cx\"\n             [attr.cy]=\"ellipse?.cy\"\n             [attr.rx]=\"ellipse?.rx\"\n             [attr.ry]=\"ellipse?.ry\"\n             [attr.stroke]=\"ellipse?.stroke?.strokeFill\"\n             [attr.stroke-dasharray]=\"ellipse?.stroke?.dashArray\"\n             [attr.stroke-width]=\"ellipse?.stroke?.thickness\"\n             [attr.fill]=\"ellipse?.stroke?.fill\"\n             vector-effect=\"non-scaling-stroke\"\n             [attr.stroke-opacity]=\"ellipse?.stroke?.opacity\"\n             (mousedown)=\"onEllipseMouseDown($event)\"\n             (mouseover)=\"onEllipseMouseOver($event)\"></svg:ellipse>",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        SvgEllipseComponent.ctorParameters = function () { return []; };
        SvgEllipseComponent.propDecorators = {
            ellipse: [{ type: core.Input }],
            ellipseMousedown: [{ type: core.Output }],
            ellipseMouseover: [{ type: core.Output }]
        };
        return SvgEllipseComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SvgEllipseModule = /** @class */ (function () {
        function SvgEllipseModule() {
        }
        SvgEllipseModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule
                        ],
                        declarations: [SvgEllipseComponent],
                        exports: [SvgEllipseComponent]
                    },] }
        ];
        return SvgEllipseModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SvgLineComponent = /** @class */ (function () {
        function SvgLineComponent() {
            this.lineMousedown = new core.EventEmitter();
            this.lineMouseover = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        SvgLineComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                if (!this.line.stroke) {
                    this.line.stroke = new Stroke();
                }
            };
        /**
         * @param {?} $event
         * @return {?}
         */
        SvgLineComponent.prototype.onLineMouseDown = /**
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                if ($event) {
                    this.lineMousedown.emit({ mouseEvent: $event, line: this.line });
                }
            };
        /**
         * @param {?} $event
         * @return {?}
         */
        SvgLineComponent.prototype.onLineMouseOver = /**
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                if ($event) {
                    this.lineMouseover.emit({ mouseEvent: $event, line: this.line });
                }
            };
        SvgLineComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'g[svg-line]',
                        template: "<svg:line [attr.x1]=\"line?.x1\"\n          [attr.y1]=\"line?.y1\"\n          [attr.x2]=\"line?.x2\"\n          [attr.y2]=\"line?.y2\"\n          [attr.fill]=\"line?.stroke?.fill\"\n          [attr.stroke]=\"line?.stroke?.strokeFill\"\n          [attr.stroke-dasharray]=\"line?.stroke?.dashArray\"\n          [attr.stroke-width]=\"line?.stroke?.thickness\"\n          [attr.stroke-opacity]=\"line?.stroke?.opacity\"\n          (mousedown)=\"onLineMouseDown($event)\"\n          (mouseover)=\"onLineMouseOver($event)\" />",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        SvgLineComponent.ctorParameters = function () { return []; };
        SvgLineComponent.propDecorators = {
            line: [{ type: core.Input }],
            lineMousedown: [{ type: core.Output }],
            lineMouseover: [{ type: core.Output }]
        };
        return SvgLineComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SvgLineModule = /** @class */ (function () {
        function SvgLineModule() {
        }
        SvgLineModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule
                        ],
                        declarations: [SvgLineComponent],
                        exports: [SvgLineComponent]
                    },] }
        ];
        return SvgLineModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SvgPathComponent = /** @class */ (function () {
        function SvgPathComponent() {
        }
        /**
         * @return {?}
         */
        SvgPathComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                if (!this.stroke) {
                    this.stroke = new Stroke();
                }
            };
        SvgPathComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'g[svg-path]',
                        template: "<svg:path [attr.d]=\"path\"\n          [attr.stroke]=\"stroke?.strokeFill\"\n          [attr.stroke-dasharray]=\"stroke?.dashArray\"\n          [attr.stroke-width]=\"stroke?.thickness\"\n          [attr.fill]=\"stroke?.fill\"\n          vector-effect=\"non-scaling-stroke\"\n          [attr.stroke-opacity]=\"stroke?.opacity\"></svg:path>",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        SvgPathComponent.ctorParameters = function () { return []; };
        SvgPathComponent.propDecorators = {
            path: [{ type: core.Input }],
            stroke: [{ type: core.Input }]
        };
        return SvgPathComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SvgPathModule = /** @class */ (function () {
        function SvgPathModule() {
        }
        SvgPathModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule
                        ],
                        declarations: [SvgPathComponent],
                        exports: [SvgPathComponent]
                    },] }
        ];
        return SvgPathModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SvgHelper = /** @class */ (function () {
        function SvgHelper() {
        }
        /**
         * @param {?} points
         * @return {?}
         */
        SvgHelper.prototype.getPolyPoints = /**
         * @param {?} points
         * @return {?}
         */
            function (points) {
                return points.map(function (p) { return p.x.toString() + ' ' + p.y.toString(); }).join(' ');
            };
        SvgHelper.decorators = [
            { type: core.Injectable }
        ];
        return SvgHelper;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SvgPolygonComponent = /** @class */ (function () {
        function SvgPolygonComponent(differs, svghelper) {
            this.differs = differs;
            this.svghelper = svghelper;
            this.polygonMousedown = new core.EventEmitter();
            this.polygonMouseover = new core.EventEmitter();
            this.differ = this.differs.find({}).create();
        }
        /**
         * @return {?}
         */
        SvgPolygonComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                if (this.polygon && util.isNullOrUndefined(this.pointsString)) {
                    this.pointsString = this.svghelper.getPolyPoints(this.polygon.vertices);
                }
                if (!this.polygon.stroke) {
                    this.polygon.stroke = new Stroke();
                }
            };
        /**
         * @return {?}
         */
        SvgPolygonComponent.prototype.ngDoCheck = /**
         * @return {?}
         */
            function () {
                /** @type {?} */
                var changes = this.differ.diff(this.polygon);
                if (changes) {
                    this.pointsString = this.svghelper.getPolyPoints(this.polygon.vertices);
                }
            };
        /**
         * @param {?} $event
         * @return {?}
         */
        SvgPolygonComponent.prototype.onPolygonMouseDown = /**
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                if ($event) {
                    this.polygonMousedown.emit({ mouseEvent: $event, polygon: this.polygon });
                }
            };
        /**
         * @param {?} $event
         * @return {?}
         */
        SvgPolygonComponent.prototype.onPolygonMouseOver = /**
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                if ($event) {
                    this.polygonMouseover.emit({ mouseEvent: $event, polygon: this.polygon });
                }
            };
        SvgPolygonComponent.decorators = [
            { type: core.Component, args: [{
                        selector: "g[svg-polygon]",
                        template: "<svg:polygon [attr.stroke]=\"polygon?.stroke?.strokeFill\"\n             [attr.fill]=\"polygon?.stroke?.fill\"\n             [attr.stroke-opacity]=\"polygon?.stroke?.opacity\"\n             [attr.stroke-dasharray]=\"polygon?.stroke?.dashArray\"\n             [attr.stroke-width]=\"polygon?.stroke?.thickness\"\n             [attr.points]=\"pointsString\"\n             vector-effect=\"non-scaling-stroke\"\n             (mousedown)=\"onPolygonMouseDown($event)\"\n             (mouseover)=\"onPolygonMouseOver($event)\">\n</svg:polygon>",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        SvgPolygonComponent.ctorParameters = function () {
            return [
                { type: core.KeyValueDiffers },
                { type: SvgHelper }
            ];
        };
        SvgPolygonComponent.propDecorators = {
            pointsString: [{ type: core.Input }],
            polygon: [{ type: core.Input }],
            polygonMousedown: [{ type: core.Output }],
            polygonMouseover: [{ type: core.Output }]
        };
        return SvgPolygonComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SvgPolygonModule = /** @class */ (function () {
        function SvgPolygonModule() {
        }
        SvgPolygonModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule
                        ],
                        declarations: [SvgPolygonComponent],
                        exports: [SvgPolygonComponent],
                        providers: [SvgHelper]
                    },] }
        ];
        return SvgPolygonModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SvgPolylineComponent = /** @class */ (function () {
        function SvgPolylineComponent(differs, svghelper) {
            this.differs = differs;
            this.svghelper = svghelper;
            this.polylineMousedown = new core.EventEmitter();
            this.differ = this.differs.find({}).create();
        }
        /**
         * @return {?}
         */
        SvgPolylineComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                if (this.polyline) {
                    this.pointsString = this.svghelper.getPolyPoints(this.polyline.vertices);
                }
                if (!this.polyline.stroke) {
                    this.polyline.stroke = new Stroke();
                }
            };
        /**
         * @return {?}
         */
        SvgPolylineComponent.prototype.ngDoCheck = /**
         * @return {?}
         */
            function () {
                /** @type {?} */
                var changes = this.differ.diff(this.polyline);
                if (changes) {
                    this.pointsString = this.svghelper.getPolyPoints(this.polyline.vertices);
                }
            };
        /**
         * @param {?} event
         * @return {?}
         */
        SvgPolylineComponent.prototype.onPolylineMouseDown = /**
         * @param {?} event
         * @return {?}
         */
            function (event) {
                if (event) {
                    this.polylineMousedown.emit({
                        mouseEvent: event,
                        polyline: this.polyline
                    });
                }
            };
        SvgPolylineComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'g[svg-polyline]',
                        template: "<svg:polyline [attr.stroke]=\"polyline?.stroke?.strokeFill\"\n             [attr.fill]=\"polyline?.stroke?.fill\"\n             [attr.stroke-opacity]=\"polyline?.stroke?.opacity\"\n             [attr.stroke-dasharray]=\"polyline?.stroke?.dashArray\"\n             [attr.stroke-width]=\"polyline?.stroke?.thickness\"\n             [attr.points]=\"pointsString\"\n             vector-effect=\"non-scaling-stroke\"\n             (mousedown)=\"onPolylineMouseDown($event)\">\n</svg:polyline>",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        SvgPolylineComponent.ctorParameters = function () {
            return [
                { type: core.KeyValueDiffers },
                { type: SvgHelper }
            ];
        };
        SvgPolylineComponent.propDecorators = {
            pointsString: [{ type: core.Input }],
            polyline: [{ type: core.Input }],
            polylineMousedown: [{ type: core.Output }]
        };
        return SvgPolylineComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SvgPolylineModule = /** @class */ (function () {
        function SvgPolylineModule() {
        }
        SvgPolylineModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule
                        ],
                        declarations: [SvgPolylineComponent],
                        exports: [SvgPolylineComponent]
                    },] }
        ];
        return SvgPolylineModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SvgRectComponent = /** @class */ (function () {
        function SvgRectComponent() {
            this.rectangleMousedown = new core.EventEmitter();
        }
        /**
         * @return {?}
         */
        SvgRectComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
                if (!this.rectangle.stroke) {
                    this.rectangle.stroke = new Stroke();
                }
            };
        /**
         * @param {?} $event
         * @return {?}
         */
        SvgRectComponent.prototype.onRectangleMouseDown = /**
         * @param {?} $event
         * @return {?}
         */
            function ($event) {
                if ($event) {
                    this.rectangleMousedown.emit({ mouseEvent: $event, rectangle: this.rectangle });
                }
            };
        SvgRectComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'g[svg-rect]',
                        template: "<svg:rect [attr.x]=\"rectangle?.x\"\n          [attr.y]=\"rectangle?.y\"\n          [attr.stroke]=\"rectangle?.stroke?.strokeFill\"\n          [attr.stroke-dasharray]=\"rectangle?.stroke?.dashArray\"\n          [attr.stroke-width]=\"rectangle?.stroke?.thickness\"\n          [attr.fill]=\"rectangle?.stroke?.fill\"\n          vector-effect=\"non-scaling-stroke\"\n          [attr.stroke-opacity]=\"rectangle?.stroke?.opacity\"\n          (mousedown)=\"onRectangleMouseDown($event)\"></svg:rect>",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        SvgRectComponent.ctorParameters = function () { return []; };
        SvgRectComponent.propDecorators = {
            rectangle: [{ type: core.Input }],
            rectangleMousedown: [{ type: core.Output }]
        };
        return SvgRectComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SvgrectModule = /** @class */ (function () {
        function SvgrectModule() {
        }
        SvgrectModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule
                        ],
                        declarations: [SvgRectComponent],
                        exports: [SvgRectComponent]
                    },] }
        ];
        return SvgrectModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SvgTextComponent = /** @class */ (function () {
        function SvgTextComponent() {
        }
        /**
         * @return {?}
         */
        SvgTextComponent.prototype.ngOnInit = /**
         * @return {?}
         */
            function () {
            };
        SvgTextComponent.decorators = [
            { type: core.Component, args: [{
                        selector: 'g[svg-text]',
                        template: "<svg:text [attr.transform]=\"transform\"\n          [attr.x]=\"x\"\n          [attr.y]=\"y\"\n          [attr.fill]=\"fontStyle?.fontFill\"\n          [attr.font-family]=\"fontStyle?.fontFamily\"\n          [attr.font-size]=\"fontStyle?.fontSize\"\n          [attr.font-weight]=\"fontStyle?.fontWeight\"\n          [attr.font-style]=\"fontStyle?.fontStyle\"\n          dominant-baseline=\"central\"\n          text-anchor=\"middle\">\n          <ng-content></ng-content>\n</svg:text>",
                        styles: [""]
                    }] }
        ];
        /** @nocollapse */
        SvgTextComponent.ctorParameters = function () { return []; };
        SvgTextComponent.propDecorators = {
            x: [{ type: core.Input }],
            y: [{ type: core.Input }],
            transform: [{ type: core.Input }],
            fontStyle: [{ type: core.Input }]
        };
        return SvgTextComponent;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */
    var SvgTextModule = /** @class */ (function () {
        function SvgTextModule() {
        }
        SvgTextModule.decorators = [
            { type: core.NgModule, args: [{
                        imports: [
                            common.CommonModule
                        ],
                        declarations: [SvgTextComponent],
                        exports: [SvgTextComponent]
                    },] }
        ];
        return SvgTextModule;
    }());

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    /**
     * @fileoverview added by tsickle
     * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
     */

    exports.SvgCircleModule = SvgCircleModule;
    exports.SvgEllipseModule = SvgEllipseModule;
    exports.SvgLineModule = SvgLineModule;
    exports.SvgPathModule = SvgPathModule;
    exports.SvgPolygonModule = SvgPolygonModule;
    exports.SvgPolylineModule = SvgPolylineModule;
    exports.SvgrectModule = SvgrectModule;
    exports.SvgTextModule = SvgTextModule;
    exports.Polygon = Polygon;
    exports.Polyline = Polyline;
    exports.Stroke = Stroke;
    exports.Vertex = Vertex;
    exports.ɵf = SvgHelper;
    exports.ɵa = SvgCircleComponent;
    exports.ɵb = SvgEllipseComponent;
    exports.ɵc = SvgLineComponent;
    exports.ɵd = SvgPathComponent;
    exports.ɵe = SvgPolygonComponent;
    exports.ɵg = SvgPolylineComponent;
    exports.ɵh = SvgRectComponent;
    exports.ɵi = SvgTextComponent;

    Object.defineProperty(exports, '__esModule', { value: true });

})));

//# sourceMappingURL=data:application/json;charset=utf-8;base64,