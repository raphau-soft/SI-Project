import { Component, Input, Output, EventEmitter, NgModule, Injectable, KeyValueDiffers } from '@angular/core';
import { CommonModule } from '@angular/common';
import { isNullOrUndefined } from 'util';

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var Stroke = /** @class */ (function () {
    function Stroke(fill, strokeFill, dashArray, thickness, opacity) {
        this.fill = fill != null ? fill : 'transparent';
        this.strokeFill = strokeFill != null ? strokeFill : 'black';
        this.dashArray = dashArray != null ? dashArray : 0;
        this.thickness = thickness != null ? thickness : 1;
        this.opacity = opacity != null ? opacity : 1;
    }
    return Stroke;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var Vertex = /** @class */ (function () {
    function Vertex() {
        this.x = 0;
        this.y = 0;
    }
    return Vertex;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var Polygon = /** @class */ (function () {
    function Polygon() {
        this.vertices = new Array();
    }
    return Polygon;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var Polyline = /** @class */ (function () {
    function Polyline() {
        this.vertices = new Array();
    }
    return Polyline;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SvgCircleComponent = /** @class */ (function () {
    function SvgCircleComponent() {
        this.circleMousedown = new EventEmitter();
        this.circleMouseover = new EventEmitter();
    }
    /**
     * @return {?}
     */
    SvgCircleComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this.circle.stroke) {
            this.circle.stroke = new Stroke();
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    SvgCircleComponent.prototype.onCircleMouseDown = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ($event) {
            this.circleMousedown.emit({ mouseEvent: $event, circle: this.circle });
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    SvgCircleComponent.prototype.onCircleMouseOver = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ($event) {
            this.circleMouseover.emit({ mouseEvent: $event, circle: this.circle });
        }
    };
    SvgCircleComponent.decorators = [
        { type: Component, args: [{
                    selector: 'g[svg-circle]',
                    template: "<svg:circle [attr.cx]=\"circle?.cx\"\r\n            [attr.cy]=\"circle?.cy\"\r\n            [attr.r]=\"circle?.r\"\r\n            [attr.stroke]=\"circle?.stroke?.strokeFill\"\r\n            [attr.stroke-dasharray]=\"circle?.stroke?.dashArray\"\r\n            [attr.stroke-width]=\"circle?.stroke?.thickness\"\r\n            [attr.fill]=\"circle?.stroke?.fill\"\r\n            vector-effect=\"non-scaling-stroke\"\r\n            [attr.stroke-opacity]=\"circle?.stroke?.opacity\"\r\n            (mousedown)=\"onCircleMouseDown($event)\"\r\n            (mouseover)=\"onCircleMouseOver($event)\"></svg:circle>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    SvgCircleComponent.ctorParameters = function () { return []; };
    SvgCircleComponent.propDecorators = {
        circle: [{ type: Input }],
        circleMousedown: [{ type: Output }],
        circleMouseover: [{ type: Output }]
    };
    return SvgCircleComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SvgCircleModule = /** @class */ (function () {
    function SvgCircleModule() {
    }
    SvgCircleModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule
                    ],
                    declarations: [SvgCircleComponent],
                    exports: [SvgCircleComponent]
                },] }
    ];
    return SvgCircleModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SvgEllipseComponent = /** @class */ (function () {
    function SvgEllipseComponent() {
        this.ellipseMousedown = new EventEmitter();
        this.ellipseMouseover = new EventEmitter();
    }
    /**
     * @return {?}
     */
    SvgEllipseComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this.ellipse.stroke) {
            this.ellipse.stroke = new Stroke();
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    SvgEllipseComponent.prototype.onEllipseMouseDown = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ($event) {
            this.ellipseMousedown.emit({ mouseEvent: $event, ellipse: this.ellipse });
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    SvgEllipseComponent.prototype.onEllipseMouseOver = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ($event) {
            this.ellipseMouseover.emit({ mouseEvent: $event, ellipse: this.ellipse });
        }
    };
    SvgEllipseComponent.decorators = [
        { type: Component, args: [{
                    selector: 'g[svg-ellipse]',
                    template: "<svg:ellipse [attr.cx]=\"ellipse?.cx\"\n             [attr.cy]=\"ellipse?.cy\"\n             [attr.rx]=\"ellipse?.rx\"\n             [attr.ry]=\"ellipse?.ry\"\n             [attr.stroke]=\"ellipse?.stroke?.strokeFill\"\n             [attr.stroke-dasharray]=\"ellipse?.stroke?.dashArray\"\n             [attr.stroke-width]=\"ellipse?.stroke?.thickness\"\n             [attr.fill]=\"ellipse?.stroke?.fill\"\n             vector-effect=\"non-scaling-stroke\"\n             [attr.stroke-opacity]=\"ellipse?.stroke?.opacity\"\n             (mousedown)=\"onEllipseMouseDown($event)\"\n             (mouseover)=\"onEllipseMouseOver($event)\"></svg:ellipse>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    SvgEllipseComponent.ctorParameters = function () { return []; };
    SvgEllipseComponent.propDecorators = {
        ellipse: [{ type: Input }],
        ellipseMousedown: [{ type: Output }],
        ellipseMouseover: [{ type: Output }]
    };
    return SvgEllipseComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SvgEllipseModule = /** @class */ (function () {
    function SvgEllipseModule() {
    }
    SvgEllipseModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule
                    ],
                    declarations: [SvgEllipseComponent],
                    exports: [SvgEllipseComponent]
                },] }
    ];
    return SvgEllipseModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SvgLineComponent = /** @class */ (function () {
    function SvgLineComponent() {
        this.lineMousedown = new EventEmitter();
        this.lineMouseover = new EventEmitter();
    }
    /**
     * @return {?}
     */
    SvgLineComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this.line.stroke) {
            this.line.stroke = new Stroke();
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    SvgLineComponent.prototype.onLineMouseDown = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ($event) {
            this.lineMousedown.emit({ mouseEvent: $event, line: this.line });
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    SvgLineComponent.prototype.onLineMouseOver = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ($event) {
            this.lineMouseover.emit({ mouseEvent: $event, line: this.line });
        }
    };
    SvgLineComponent.decorators = [
        { type: Component, args: [{
                    selector: 'g[svg-line]',
                    template: "<svg:line [attr.x1]=\"line?.x1\"\n          [attr.y1]=\"line?.y1\"\n          [attr.x2]=\"line?.x2\"\n          [attr.y2]=\"line?.y2\"\n          [attr.fill]=\"line?.stroke?.fill\"\n          [attr.stroke]=\"line?.stroke?.strokeFill\"\n          [attr.stroke-dasharray]=\"line?.stroke?.dashArray\"\n          [attr.stroke-width]=\"line?.stroke?.thickness\"\n          [attr.stroke-opacity]=\"line?.stroke?.opacity\"\n          (mousedown)=\"onLineMouseDown($event)\"\n          (mouseover)=\"onLineMouseOver($event)\" />",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    SvgLineComponent.ctorParameters = function () { return []; };
    SvgLineComponent.propDecorators = {
        line: [{ type: Input }],
        lineMousedown: [{ type: Output }],
        lineMouseover: [{ type: Output }]
    };
    return SvgLineComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SvgLineModule = /** @class */ (function () {
    function SvgLineModule() {
    }
    SvgLineModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule
                    ],
                    declarations: [SvgLineComponent],
                    exports: [SvgLineComponent]
                },] }
    ];
    return SvgLineModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SvgPathComponent = /** @class */ (function () {
    function SvgPathComponent() {
    }
    /**
     * @return {?}
     */
    SvgPathComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this.stroke) {
            this.stroke = new Stroke();
        }
    };
    SvgPathComponent.decorators = [
        { type: Component, args: [{
                    selector: 'g[svg-path]',
                    template: "<svg:path [attr.d]=\"path\"\n          [attr.stroke]=\"stroke?.strokeFill\"\n          [attr.stroke-dasharray]=\"stroke?.dashArray\"\n          [attr.stroke-width]=\"stroke?.thickness\"\n          [attr.fill]=\"stroke?.fill\"\n          vector-effect=\"non-scaling-stroke\"\n          [attr.stroke-opacity]=\"stroke?.opacity\"></svg:path>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    SvgPathComponent.ctorParameters = function () { return []; };
    SvgPathComponent.propDecorators = {
        path: [{ type: Input }],
        stroke: [{ type: Input }]
    };
    return SvgPathComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SvgPathModule = /** @class */ (function () {
    function SvgPathModule() {
    }
    SvgPathModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule
                    ],
                    declarations: [SvgPathComponent],
                    exports: [SvgPathComponent]
                },] }
    ];
    return SvgPathModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SvgHelper = /** @class */ (function () {
    function SvgHelper() {
    }
    /**
     * @param {?} points
     * @return {?}
     */
    SvgHelper.prototype.getPolyPoints = /**
     * @param {?} points
     * @return {?}
     */
    function (points) {
        return points.map(function (p) { return p.x.toString() + ' ' + p.y.toString(); }).join(' ');
    };
    SvgHelper.decorators = [
        { type: Injectable }
    ];
    return SvgHelper;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SvgPolygonComponent = /** @class */ (function () {
    function SvgPolygonComponent(differs, svghelper) {
        this.differs = differs;
        this.svghelper = svghelper;
        this.polygonMousedown = new EventEmitter();
        this.polygonMouseover = new EventEmitter();
        this.differ = this.differs.find({}).create();
    }
    /**
     * @return {?}
     */
    SvgPolygonComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.polygon && isNullOrUndefined(this.pointsString)) {
            this.pointsString = this.svghelper.getPolyPoints(this.polygon.vertices);
        }
        if (!this.polygon.stroke) {
            this.polygon.stroke = new Stroke();
        }
    };
    /**
     * @return {?}
     */
    SvgPolygonComponent.prototype.ngDoCheck = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var changes = this.differ.diff(this.polygon);
        if (changes) {
            this.pointsString = this.svghelper.getPolyPoints(this.polygon.vertices);
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    SvgPolygonComponent.prototype.onPolygonMouseDown = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ($event) {
            this.polygonMousedown.emit({ mouseEvent: $event, polygon: this.polygon });
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    SvgPolygonComponent.prototype.onPolygonMouseOver = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ($event) {
            this.polygonMouseover.emit({ mouseEvent: $event, polygon: this.polygon });
        }
    };
    SvgPolygonComponent.decorators = [
        { type: Component, args: [{
                    selector: "g[svg-polygon]",
                    template: "<svg:polygon [attr.stroke]=\"polygon?.stroke?.strokeFill\"\n             [attr.fill]=\"polygon?.stroke?.fill\"\n             [attr.stroke-opacity]=\"polygon?.stroke?.opacity\"\n             [attr.stroke-dasharray]=\"polygon?.stroke?.dashArray\"\n             [attr.stroke-width]=\"polygon?.stroke?.thickness\"\n             [attr.points]=\"pointsString\"\n             vector-effect=\"non-scaling-stroke\"\n             (mousedown)=\"onPolygonMouseDown($event)\"\n             (mouseover)=\"onPolygonMouseOver($event)\">\n</svg:polygon>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    SvgPolygonComponent.ctorParameters = function () { return [
        { type: KeyValueDiffers },
        { type: SvgHelper }
    ]; };
    SvgPolygonComponent.propDecorators = {
        pointsString: [{ type: Input }],
        polygon: [{ type: Input }],
        polygonMousedown: [{ type: Output }],
        polygonMouseover: [{ type: Output }]
    };
    return SvgPolygonComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SvgPolygonModule = /** @class */ (function () {
    function SvgPolygonModule() {
    }
    SvgPolygonModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule
                    ],
                    declarations: [SvgPolygonComponent],
                    exports: [SvgPolygonComponent],
                    providers: [SvgHelper]
                },] }
    ];
    return SvgPolygonModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SvgPolylineComponent = /** @class */ (function () {
    function SvgPolylineComponent(differs, svghelper) {
        this.differs = differs;
        this.svghelper = svghelper;
        this.polylineMousedown = new EventEmitter();
        this.differ = this.differs.find({}).create();
    }
    /**
     * @return {?}
     */
    SvgPolylineComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (this.polyline) {
            this.pointsString = this.svghelper.getPolyPoints(this.polyline.vertices);
        }
        if (!this.polyline.stroke) {
            this.polyline.stroke = new Stroke();
        }
    };
    /**
     * @return {?}
     */
    SvgPolylineComponent.prototype.ngDoCheck = /**
     * @return {?}
     */
    function () {
        /** @type {?} */
        var changes = this.differ.diff(this.polyline);
        if (changes) {
            this.pointsString = this.svghelper.getPolyPoints(this.polyline.vertices);
        }
    };
    /**
     * @param {?} event
     * @return {?}
     */
    SvgPolylineComponent.prototype.onPolylineMouseDown = /**
     * @param {?} event
     * @return {?}
     */
    function (event) {
        if (event) {
            this.polylineMousedown.emit({
                mouseEvent: event,
                polyline: this.polyline
            });
        }
    };
    SvgPolylineComponent.decorators = [
        { type: Component, args: [{
                    selector: 'g[svg-polyline]',
                    template: "<svg:polyline [attr.stroke]=\"polyline?.stroke?.strokeFill\"\n             [attr.fill]=\"polyline?.stroke?.fill\"\n             [attr.stroke-opacity]=\"polyline?.stroke?.opacity\"\n             [attr.stroke-dasharray]=\"polyline?.stroke?.dashArray\"\n             [attr.stroke-width]=\"polyline?.stroke?.thickness\"\n             [attr.points]=\"pointsString\"\n             vector-effect=\"non-scaling-stroke\"\n             (mousedown)=\"onPolylineMouseDown($event)\">\n</svg:polyline>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    SvgPolylineComponent.ctorParameters = function () { return [
        { type: KeyValueDiffers },
        { type: SvgHelper }
    ]; };
    SvgPolylineComponent.propDecorators = {
        pointsString: [{ type: Input }],
        polyline: [{ type: Input }],
        polylineMousedown: [{ type: Output }]
    };
    return SvgPolylineComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SvgPolylineModule = /** @class */ (function () {
    function SvgPolylineModule() {
    }
    SvgPolylineModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule
                    ],
                    declarations: [SvgPolylineComponent],
                    exports: [SvgPolylineComponent]
                },] }
    ];
    return SvgPolylineModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SvgRectComponent = /** @class */ (function () {
    function SvgRectComponent() {
        this.rectangleMousedown = new EventEmitter();
    }
    /**
     * @return {?}
     */
    SvgRectComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
        if (!this.rectangle.stroke) {
            this.rectangle.stroke = new Stroke();
        }
    };
    /**
     * @param {?} $event
     * @return {?}
     */
    SvgRectComponent.prototype.onRectangleMouseDown = /**
     * @param {?} $event
     * @return {?}
     */
    function ($event) {
        if ($event) {
            this.rectangleMousedown.emit({ mouseEvent: $event, rectangle: this.rectangle });
        }
    };
    SvgRectComponent.decorators = [
        { type: Component, args: [{
                    selector: 'g[svg-rect]',
                    template: "<svg:rect [attr.x]=\"rectangle?.x\"\n          [attr.y]=\"rectangle?.y\"\n          [attr.stroke]=\"rectangle?.stroke?.strokeFill\"\n          [attr.stroke-dasharray]=\"rectangle?.stroke?.dashArray\"\n          [attr.stroke-width]=\"rectangle?.stroke?.thickness\"\n          [attr.fill]=\"rectangle?.stroke?.fill\"\n          vector-effect=\"non-scaling-stroke\"\n          [attr.stroke-opacity]=\"rectangle?.stroke?.opacity\"\n          (mousedown)=\"onRectangleMouseDown($event)\"></svg:rect>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    SvgRectComponent.ctorParameters = function () { return []; };
    SvgRectComponent.propDecorators = {
        rectangle: [{ type: Input }],
        rectangleMousedown: [{ type: Output }]
    };
    return SvgRectComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SvgrectModule = /** @class */ (function () {
    function SvgrectModule() {
    }
    SvgrectModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule
                    ],
                    declarations: [SvgRectComponent],
                    exports: [SvgRectComponent]
                },] }
    ];
    return SvgrectModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SvgTextComponent = /** @class */ (function () {
    function SvgTextComponent() {
    }
    /**
     * @return {?}
     */
    SvgTextComponent.prototype.ngOnInit = /**
     * @return {?}
     */
    function () {
    };
    SvgTextComponent.decorators = [
        { type: Component, args: [{
                    selector: 'g[svg-text]',
                    template: "<svg:text [attr.transform]=\"transform\"\n          [attr.x]=\"x\"\n          [attr.y]=\"y\"\n          [attr.fill]=\"fontStyle?.fontFill\"\n          [attr.font-family]=\"fontStyle?.fontFamily\"\n          [attr.font-size]=\"fontStyle?.fontSize\"\n          [attr.font-weight]=\"fontStyle?.fontWeight\"\n          [attr.font-style]=\"fontStyle?.fontStyle\"\n          dominant-baseline=\"central\"\n          text-anchor=\"middle\">\n          <ng-content></ng-content>\n</svg:text>",
                    styles: [""]
                }] }
    ];
    /** @nocollapse */
    SvgTextComponent.ctorParameters = function () { return []; };
    SvgTextComponent.propDecorators = {
        x: [{ type: Input }],
        y: [{ type: Input }],
        transform: [{ type: Input }],
        fontStyle: [{ type: Input }]
    };
    return SvgTextComponent;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */
var SvgTextModule = /** @class */ (function () {
    function SvgTextModule() {
    }
    SvgTextModule.decorators = [
        { type: NgModule, args: [{
                    imports: [
                        CommonModule
                    ],
                    declarations: [SvgTextComponent],
                    exports: [SvgTextComponent]
                },] }
    ];
    return SvgTextModule;
}());

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

/**
 * @fileoverview added by tsickle
 * @suppress {checkTypes,extraRequire,missingReturn,unusedPrivateMembers,uselessCode} checked by tsc
 */

export { SvgCircleModule, SvgEllipseModule, SvgLineModule, SvgPathModule, SvgPolygonModule, SvgPolylineModule, SvgrectModule, SvgTextModule, Polygon, Polyline, Stroke, Vertex, SvgHelper as ɵf, SvgCircleComponent as ɵa, SvgEllipseComponent as ɵb, SvgLineComponent as ɵc, SvgPathComponent as ɵd, SvgPolygonComponent as ɵe, SvgPolylineComponent as ɵg, SvgRectComponent as ɵh, SvgTextComponent as ɵi };

//# sourceMappingURL=data:application/json;charset=utf-8;base64,